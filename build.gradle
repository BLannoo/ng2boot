buildscript {
	repositories {
		mavenLocal()
	}
	dependencies {
		classpath 'com.cegeka.gradle:docker-build:1.0'
		classpath 'com.cegeka.gradle:docker-compose:1.0'
	}
}

apply plugin: 'com.cegeka.gradle.docker-compose'

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

subprojects {
	def nexusUrl = "$nexusHost:$nexusPort"
	def imageName = "$ng2bootGroup/$project.name:$ng2bootVersion"
	def nexusImageUrl = "$nexusUrl/$imageName"

	group ng2bootGroup
	version ng2bootVersion

	task tagInNexus(type:Exec) {
		commandLine 'docker', 'tag', "$imageName", "$nexusImageUrl"
	}

	task pushToNexus(type:Exec) {
		commandLine 'docker', 'push', "$nexusImageUrl"
	}

	pushToNexus.dependsOn tagInNexus
}

task pushAllImagesToNexus(type: GradleBuild)  {
	doFirst {
		def tasksToRun = []
		project.subprojects { project ->
			tasksToRun << ":$project.name:pushToNexus".toString()
		};
		tasks = tasksToRun
	}
}

task bumpVersion {
	Properties props = new Properties()
	File propsFile = new File('gradle.properties')

	props.load(propsFile.newDataInputStream())

	def version = props.getProperty('ng2bootVersion')
	def buildIndex = version.indexOf('b')

	def versionWithoutBuild = version.substring(0, buildIndex - 1)

	def buildNumber = version.substring(buildIndex + 1, version.length())
	def newBuildNumber = Integer.parseInt(buildNumber) + 1

	props.setProperty('ng2bootVersion', "$versionWithoutBuild-b$newBuildNumber")
	props.store(propsFile.newWriter(), null)
}